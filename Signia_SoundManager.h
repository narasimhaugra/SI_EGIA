/*.$file${.::Signia_SoundManager.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: Signia_SoundManager.qm
* File:  ${.::Signia_SoundManager.h}
*
* This code has been generated by QM 5.1.0 <www.state-machine.com/qm/>.
* DO NOT EDIT SECTIONS BETWEEN THE COMMENTS "$...vvv".."$end...^^^".
* All your changes in these sections will be lost.
*
* This code is covered by the following QP license:
* License #   : QPC-SP-170817A
* Issued to   : Covidien LP
* Framework(s): qpc
* Support ends: 2022-08-17
* Product(s)  :
* Signia Powered Stapler
*/
/*.$endhead${.::Signia_SoundManager.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef SIGNIA_SOUNDMGR_H
#define SIGNIA_SOUNDMGR_H

#ifdef __cplusplus  /* header compatible with C++ project */
extern "C"
{
#endif

/* ========================================================================== */
/**
 * \brief   Header file for Sound Manager AO
 *
 * \details Global defines and prototypes defined here.
 *
 * \copyright 2021 Covidien - Surgical Innovations. All Rights Reserved.
 *
 * \file    Signia_SoundManager.h
 *
 * ========================================================================== */

/******************************************************************************/
/*                             Include                                        */
/******************************************************************************/

#include "Common.h"

/******************************************************************************/
/*                             Global Define(s) (Macros)                      */
/******************************************************************************/

/******************************************************************************/
/*                             Global Type(s)                                 */
/******************************************************************************/

/// Sound Manager supported tones
typedef enum
{
    SNDMGR_TONE_ALL_GOOD,               ///< All Good Tone
    SNDMGR_TONE_READY,                  ///< Ready Tone
    SNDMGR_TONE_CLAMP_CONFIRMATION,     ///< Clamp Confirmation Tone
    SNDMGR_TONE_ENTER_FIRE_MODE,        ///< Enter Fire Mode Tone
    SNDMGR_TONE_EXIT_FIRE_MODE,         ///< Exit Fire Mode Tone
    SNDMGR_TONE_MEDIUM_SPEED,           ///< Medium Speed Tone
    SNDMGR_TONE_SLOW_SPEED,             ///< Slow Speed Tone
    SNDMGR_TONE_LIMIT_REACHED,          ///< Limit Reached Tone
    SNDMGR_TONE_LOW_BATTERY,            ///< Low Battery Tone
    SNDMGR_TONE_INSUFFICIENT_BATTERY,   ///< Insufficient Battery Tone
    SNDMGR_TONE_EMERGENCY_RETRACT,      ///< Emergency Retract Tone
    SNDMGR_TONE_CAUTION,                ///< Caution Tone
    SNDMGR_TONE_FAULT,                  ///< Fault Tone
    SNDMGR_TONE_LONG_TEST,              ///< Long Test Tone
    SNDMGR_TONE_SHUTDOWN,               ///< Shutdown Tone
    SNDMGR_TONE_COUNT                   ///< Tone Last
} SNDMGR_TONE;

/// Sound Manager Status
typedef enum
{
    SNDMGR_OK,                          ///< Success
    SNDMGR_ERROR,                       ///< Error
    SNDMGR_LAST                         ///< Last
} SNDMGR_STATUS;

/******************************************************************************/
/*                             Global Constant Declaration(s)                 */
/******************************************************************************/

/******************************************************************************/
/*                             Global Variable Declaration(s)                 */
/******************************************************************************/

/******************************************************************************/
/*                             Global Function Prototype(s)                   */
/******************************************************************************/

SNDMGR_STATUS Signia_PlayTone(SNDMGR_TONE Tone);

/* Declare constructor function prototype: */

/*.$declare${AOs::L4_SoundManagerCtor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/* ========================================================================== */
/*.${AOs::L4_SoundManagerCtor} .............................................*/
void L4_SoundManagerCtor(void);
/*.$enddecl${AOs::L4_SoundManagerCtor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

#ifdef __cplusplus  /* header compatible with C++ project */
}
#endif

#endif